<?php

namespace App\Filament\Resources\CurriculumResource\Pages;

use App\Filament\Resources\CurriculumResource;
use App\Models\Section;
use App\Models\TeachingMaterial;
use Filament\Actions;
use Filament\Facades\Filament;
use Filament\Resources\Pages\ListRecords;
use Filament\Resources\Pages\ViewRecord;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Contracts\HasTable;
use Filament\Tables\Concerns\InteractsWithTable;
use Filament\Tables\Table;

class ViewStudentSections extends ViewRecord
    //implements HasTable
{
    //use InteractsWithTable;

    protected static string $resource = CurriculumResource::class;

    protected static string $view = 'filament.resources.sections.lessons';

    //protected $listeners = ['sectionSelected'];

    public $materials = [];
    public $sections = [];
    public $section = [];
    public $selectedSectionId = null;
    public $selectedSection = 0;

//    public function mount(): void
//    {
//        //parent::mount(); // TODO: Change the autogenerated stub
//        //dd($record);
//        $this->sections = Section::get();
//        //$this->materials = TeachingMaterial::get();
//    }

    public function selectSection()
    {
        $this->section = Section::where('id',$this->selectedSection)->with('teaching_material')->first();
        if($this->section )
            $this->materials = $this->section->teaching_material;
        //$this->selectedSectionId = $sectionId;
        //$this->emit('sectionSelected', $sectionId); // Emit an event to notify the ChildRecords component
    }

    public function selectMaterial($material_id)
    {
        return $this->redirect(route('filament.administrator.resources.teaching-materials.material',
            [
                'tenant'=> Filament::getTenant(),
                'record' => $material_id]));
    }


    /*public function sectionSelected($parentId)
    {
        $this->materials = TeachingMaterial::get(); // Fetch child records
    }*/

    /*protected function getHeaderActions(): array
    {
        return [
            Actions\CreateAction::make(),
        ];
    }*/

//    public function table(Table $table): Table
//    {
//        return $table
//            ->query(Section::query())
//            ->columns([
//                TextColumn::make('name'),
//            ])
//            ->filters([
//                // ...
//            ])
//            ->actions([
//                // ...
//            ])
//            ->bulkActions([
//                // ...
//            ]);
//    }
//
//    protected function getMaterialQuery(): Builder
//    {
//        $query = TeachingMaterial::get();
//        /*$query->where('doctor_id', auth()->user()->doctor_id)
//            ->whereDate('created_at', Carbon::today());*/
//
//        return $query;
//    }
    /*
        function material(Material $table): Table
        {
            return $table
                ->columns([
                    TextColumn::make('name'),
                ])
                ->actions([
                ])
                ->bulkActions([
                ]);
        }*/
    /*
        public function material(): Table
        {
            return Table::make()
                ->query(TeachingMaterial::query())
                ->columns([
                    TextColumn::make('name'),
                ])
                ->filters([
                    // ...
                ])
                ->actions([
                    // ...
                ])
                ->bulkActions([
                    // ...
                ]);
        }*/
}
