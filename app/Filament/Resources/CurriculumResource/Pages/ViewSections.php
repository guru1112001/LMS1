<?php

namespace App\Filament\Resources\CurriculumResource\Pages;

use App\Filament\Resources\CurriculumResource;
use App\Models\Batch;
use App\Models\Curriculum;
use App\Models\Section;
use App\Models\TeachingMaterial;
use App\Tables\Columns\CustomActionColumn;
use Filament\Actions;
use Filament\Facades\Filament;
use Filament\Forms\Components\Checkbox;
use Filament\Forms\Components\CheckboxList;
use Filament\Forms\Components\Hidden;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Toggle;
use Filament\Forms\Concerns\InteractsWithForms;
use Filament\Forms\Contracts\HasForms;
use Filament\Forms\Form;
use Filament\Resources\Pages\ListRecords;
use Filament\Resources\Pages\ViewRecord;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Contracts\HasTable;
use Filament\Tables\Concerns\InteractsWithTable;
use Filament\Tables\Table;
use Filament\Tables;
use Illuminate\Contracts\Support\Htmlable;
use Illuminate\Contracts\View\View;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\HtmlString;
use function Laravel\Prompts\search;

class ViewSections extends ViewRecord implements HasTable
{
    use InteractsWithTable;

    protected static string $resource = CurriculumResource::class;

    protected static string $view = 'filament.resources.sections.list';

    //protected $listeners = ['sectionSelected'];

    public $materials = [];
    public $sections = [];
    public $reorder = false;
    public $section;
    public $selectedSection = null;
    public $curriculum = null;

    public function mount(int|string $record): void
    {
        parent::mount($record); // TODO: Change the autogenerated stub
        $this->curriculum = $this->record->id;
    }

    protected function getTableQuery()
    {

        return Section::where('id', $this->record->id);
    }

//    public function getFormSchema()
//    {
//        return [
//                \Filament\Forms\Components\Section::make()
//                    ->schema([
//                        TextInput::make('name')
//                            ->required()
//                            ->maxLength(255),
//                    ])
//            ];
//    }


    public function table(Table $table): Table
    {
        return $table
            ->query(Section::where('curriculum_id', $this->record->id))
            ->heading('Sections')
            ->defaultSort('sort')
            ->reorderable('sort')
            ->paginated(false)
            ->columns([
                CustomActionColumn::make('sort')
                    ->label(''),
                Tables\Columns\TextColumn::make('name')
                    ->label(''),
            ])
            ->headerActions([
                Tables\Actions\CreateAction::make()
                    ->form([
                        TextInput::make('name')
                            ->required()
                            ->maxLength(255),

                        Checkbox::make('move_next')
                            ->label('Make this section a prerequisite.')
                            ->helperText("Students won't be able to move on to next sections unless they complete this section.")
                        ,

                        Toggle::make('published'),

                        Hidden::make('curriculum_id')
                            ->default($this->curriculum),
                        TextInput::make('sort')
                            ->required(),
                        /*Select::make('curriculum_id')
                            ->default($this->curriculum)
                            ->label('Curriculum')
                            ->options(function (callable $get) {
                                return Curriculum::pluck('name', 'id');
                            })
                            ->searchable()
                            ->preload()
                            ->required()
                            ->columnSpanFull(),*/
                        //->inlineLabel(true),
                        //->options(['1' => "Make this section a prerequisite."])
                        //->descriptions("Students won't be able to move on to next sections unless they complete this section."),
                        Textarea::make('short_description')
                            ->columnSpanFull(),
                    ])
            ])
            ->filters([
                // ...
            ])
            ->actions([
                Tables\Actions\Action::make('id')
                    ->icon('heroicon-o-eye')
                    ->label('')
                    ->action(function ($record): void {
                        $this->selectSection($record->id, $record->name);
                    }),
                Tables\Actions\ActionGroup::make(
                    [
                        Tables\Actions\EditAction::make()->form([
                            TextInput::make('name')
                                ->required()
                                ->maxLength(255),

                            Checkbox::make('move_next')
                                ->label('Make this section a prerequisite.')
                                ->helperText("Students won't be able to move on to next sections unless they complete this section.")
                            ,

                            Toggle::make('published'),
                            //->inlineLabel(true),
                            //->options(['1' => "Make this section a prerequisite."])
                            //->descriptions("Students won't be able to move on to next sections unless they complete this section."),
                            Textarea::make('short_description')
                                ->columnSpanFull(),
                        ]),
                        Tables\Actions\EditAction::make('publish')
                            ->icon('heroicon-o-arrow-path')
                            ->label('Publish / UnPublish')
                            ->recordTitle('Publish / UnPublish')
                            ->form([
                                CheckboxList::make('batches')
                                    ->relationship(titleAttribute: 'name')
                                    ->searchable()
                                    ->noSearchResultsMessage('No batch found.')
                                    ->bulkToggleable()
                                ->getOptionLabelFromRecordUsing((fn(Model $record) => new HtmlString($record->additional_details))),
                            ]),
                        Tables\Actions\DeleteAction::make('delete')
                    ]
                )

            ])
            ->bulkActions([
                // ...
            ]);
    }


//    protected function getTableColumns(): array
//    {
//        return [
////            CustomActionColumn::make('id'),
//            CustomActionColumn::make('sort')
//                ->label(''),
//            Tables\Columns\TextColumn::make('name'),
//
//            //Tables\Columns\TextColumn::make('id')
//            //Tables\Actions\Action::make('edit')
//            /*->extraAttributes(fn (Section $record) => [
//                //'wire:click' => '$emit("selectSection", "is_admin")',
//                'wire:click' => "\$dispatch('section', '{$record->id}')",
//                'class' => 'transition hover:text-primary-500 cursor-pointer',
//            ]),*/
//            //->wireClick('selectSection')
////            ->action(fn (Section $record): string => "selectSection(".$record->id.")")
////            ->extraAttributes(fn (Section $record) => [
////                //'wire:click' => '$emit("selectSection", "is_admin")',
////                'wire:click' => "\$dispatch('section', '{$record->id}')",
////                'class' => 'transition hover:text-primary-500 cursor-pointer',
////            ]),
//        ];
//    }
//
//    public function editAction($d)
//    {
//        dd($d);
//        \Filament\Actions\EditAction::make()
//            ->record($this->record)
//            ->form([
//                \Filament\Forms\Components\TextInput::make('name')
//                    ->required()
//                    ->maxLength(255),
//                // ...
//            ]);
//    }

//    public function selectSectionAction($sectionId)
//    {
//        $this->section = Section::where('id', $sectionId)->with('teaching_material')->first();
//        if ($this->section)
//            $this->materials = $this->section->teaching_material;
//    }
//
//    public function updateSection($sectionId)
//    {
//        $this->section = Section::where('id', $sectionId)->with('teaching_material')->first();
//        if ($this->section)
//            $this->materials = $this->section->teaching_material;
//    }

//    public function mount(): void
//    {
//        //parent::mount(); // TODO: Change the autogenerated stub
//        //dd($record);
//        $this->sections = Section::get();
//        //$this->materials = TeachingMaterial::get();
//    }


    public function selectSection($id, $name)
    {
        $this->selectedSection = [];
        $this->selectedSection = ['id' => $id, 'name' => $name];

        $this->section = Section::where('id', $id)->with('teaching_material')->first();
        /*if ($this->section)
            $this->materials = $this->section->teaching_material;
        */
        //$this->selectedSectionId = $sectionId;
        //$this->emit('sectionSelected', $sectionId); // Emit an event to notify the ChildRecords component
    }

    public function selectMaterial($material_id)
    {
        return $this->redirect(route('filament.administrator.resources.teaching-materials.material',
            [
                'tenant' => Filament::getTenant(),
                'record' => $material_id]));
    }


    /*public function sectionSelected($parentId)
    {
        $this->materials = TeachingMaterial::get(); // Fetch child records
    }*/

    /*protected function getHeaderActions(): array
    {
        return [
            Actions\CreateAction::make(),
        ];
    }*/

//    public function table(Table $table): Table
//    {
//        return $table
//            ->query(Section::query())
//            ->columns([
//                TextColumn::make('name'),
//            ])
//            ->filters([
//                // ...
//            ])
//            ->actions([
//                // ...
//            ])
//            ->bulkActions([
//                // ...
//            ]);
//    }
//
//    protected function getMaterialQuery(): Builder
//    {
//        $query = TeachingMaterial::get();
//        /*$query->where('doctor_id', auth()->user()->doctor_id)
//            ->whereDate('created_at', Carbon::today());*/
//
//        return $query;
//    }
    /*
        function material(Material $table): Table
        {
            return $table
                ->columns([
                    TextColumn::make('name'),
                ])
                ->actions([
                ])
                ->bulkActions([
                ]);
        }*/
    /*
        public function material(): Table
        {
            return Table::make()
                ->query(TeachingMaterial::query())
                ->columns([
                    TextColumn::make('name'),
                ])
                ->filters([
                    // ...
                ])
                ->actions([
                    // ...
                ])
                ->bulkActions([
                    // ...
                ]);
        }*/
}
